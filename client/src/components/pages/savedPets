// import { Container, Card, Button, Row, Col } from "react-bootstrap";
// import { useQuery, useMutation } from "@apollo/client";
// import { PET_QUERY } from "../../utils/queries";
// import { REMOVE_PET } from "../../utils/mutations";
import { useState, useEffect } from "react";

const savedPets = () => {
    const [ loading, setLoading] = useState(true);
    const [ savedPets, setSavedPets ] = useState([]);

    useEffect(() => {
        const fetchData = async () => {
          try {
            const response = await fetch("/api/pets"); // Replace with your API endpoint
            const data = await response.json();
            setSavedPets(data);
            setLoading(false);
          } catch (error) {
            console.error(error);
            setLoading(false);
          }
        };
    
        fetchData();
      }, []);
    
      const handleDeletePet = async (petId) => {
        try {
          await fetch(`/api/pets/${petId}`, {
            method: "DELETE",
          });
    
          // Assuming removePetId is defined
          removePetId(petId);
        } catch (error) {
          console.error(error);
        }
      };

    if (loading) {
        return <h2>LOADING...</h2>;
    }
    return (
        <>
        {/* <div fluid className="text-light bg-dark p-5">
            <Container>
                <h1>Viewing {userData.username}'s future pets!</h1>
            </Container>
        </div>
        <Container>
            <h2 className="pt-5">
                {userData.savedPets.length
                ? `Viewing ${userData.savedPets.length} saved ${userData.savedPets.length === 1 ? "pet" : "pets"}:`
                : "You have no saved Pets!"}
            </h2>
            <Row>
            {userData.savedPets.map((pet) => {
            return (
              <Col md="4">
                <Card key={pet.petId} border="dark">
                  {pets.image ? (
                    <Card.Img
                      src={pets.image}
                      alt={`Your pets name is ${pet.name}`}
                      variant="top"
                    />
                  ) : null}
                  <Card.Body>
                    <Card.Name>{pet.name}</Card.Name>
                    <p className="small">Breed: {pet.breed}</p>
                    <Card.Text>{pet.bio}</Card.Text>
                    <Button
                      className="btn-block btn-danger"
                      onClick={() => handleDeleteBook(pet.petId)}
                    >
                      Remove this Pet!
                    </Button>
                  </Card.Body>
                </Card>
              </Col>
            );
          })}
            </Row>
        </Container> */}
        </>
    );
};

export default SavedPets;